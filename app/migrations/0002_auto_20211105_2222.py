# Generated by Django 3.2.6 on 2021-11-06 02:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='leitura',
            name='resenha',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='leitura',
            name='livro',
        ),
        migrations.AddField(
            model_name='leitura',
            name='livro',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.livro'),
        ),
        migrations.AlterField(
            model_name='leitura',
            name='nota',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AlterField(
            model_name='leitura',
            name='status',
            field=models.CharField(choices=[('N', 'Pretendo ler'), ('LE', 'Em leitura'), ('LI', 'Lido')], max_length=2),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nome', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
